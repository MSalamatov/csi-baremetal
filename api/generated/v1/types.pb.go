// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package v1api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Drive struct {
	UUID         string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	VID          string `protobuf:"bytes,2,opt,name=VID,proto3" json:"VID,omitempty"`
	PID          string `protobuf:"bytes,3,opt,name=PID,proto3" json:"PID,omitempty"`
	SerialNumber string `protobuf:"bytes,4,opt,name=SerialNumber,proto3" json:"SerialNumber,omitempty"`
	Health       string `protobuf:"bytes,5,opt,name=Health,proto3" json:"Health,omitempty"`
	Type         string `protobuf:"bytes,6,opt,name=Type,proto3" json:"Type,omitempty"`
	// size in bytes
	Size              int64  `protobuf:"varint,7,opt,name=Size,proto3" json:"Size,omitempty"`
	Status            string `protobuf:"bytes,8,opt,name=Status,proto3" json:"Status,omitempty"`
	OperationalStatus string `protobuf:"bytes,9,opt,name=OperationalStatus,proto3" json:"OperationalStatus,omitempty"`
	NodeId            string `protobuf:"bytes,10,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	// path to the device. may not be set by drivemgr.
	Path                 string   `protobuf:"bytes,11,opt,name=Path,proto3" json:"Path,omitempty"`
	Enclosure            string   `protobuf:"bytes,12,opt,name=Enclosure,proto3" json:"Enclosure,omitempty"`
	Slot                 string   `protobuf:"bytes,13,opt,name=Slot,proto3" json:"Slot,omitempty"`
	Bay                  string   `protobuf:"bytes,14,opt,name=Bay,proto3" json:"Bay,omitempty"`
	Firmware             string   `protobuf:"bytes,15,opt,name=Firmware,proto3" json:"Firmware,omitempty"`
	Endurance            int64    `protobuf:"varint,16,opt,name=Endurance,proto3" json:"Endurance,omitempty"`
	LEDState             string   `protobuf:"bytes,17,opt,name=LEDState,proto3" json:"LEDState,omitempty"`
	IsSystem             bool     `protobuf:"varint,18,opt,name=IsSystem,proto3" json:"IsSystem,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Drive) Reset()         { *m = Drive{} }
func (m *Drive) String() string { return proto.CompactTextString(m) }
func (*Drive) ProtoMessage()    {}
func (*Drive) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}

func (m *Drive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Drive.Unmarshal(m, b)
}
func (m *Drive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Drive.Marshal(b, m, deterministic)
}
func (m *Drive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Drive.Merge(m, src)
}
func (m *Drive) XXX_Size() int {
	return xxx_messageInfo_Drive.Size(m)
}
func (m *Drive) XXX_DiscardUnknown() {
	xxx_messageInfo_Drive.DiscardUnknown(m)
}

var xxx_messageInfo_Drive proto.InternalMessageInfo

func (m *Drive) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *Drive) GetVID() string {
	if m != nil {
		return m.VID
	}
	return ""
}

func (m *Drive) GetPID() string {
	if m != nil {
		return m.PID
	}
	return ""
}

func (m *Drive) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *Drive) GetHealth() string {
	if m != nil {
		return m.Health
	}
	return ""
}

func (m *Drive) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Drive) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Drive) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Drive) GetOperationalStatus() string {
	if m != nil {
		return m.OperationalStatus
	}
	return ""
}

func (m *Drive) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *Drive) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Drive) GetEnclosure() string {
	if m != nil {
		return m.Enclosure
	}
	return ""
}

func (m *Drive) GetSlot() string {
	if m != nil {
		return m.Slot
	}
	return ""
}

func (m *Drive) GetBay() string {
	if m != nil {
		return m.Bay
	}
	return ""
}

func (m *Drive) GetFirmware() string {
	if m != nil {
		return m.Firmware
	}
	return ""
}

func (m *Drive) GetEndurance() int64 {
	if m != nil {
		return m.Endurance
	}
	return 0
}

func (m *Drive) GetLEDState() string {
	if m != nil {
		return m.LEDState
	}
	return ""
}

func (m *Drive) GetIsSystem() bool {
	if m != nil {
		return m.IsSystem
	}
	return false
}

type Volume struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Location             string   `protobuf:"bytes,2,opt,name=Location,proto3" json:"Location,omitempty"`
	LocationType         string   `protobuf:"bytes,3,opt,name=LocationType,proto3" json:"LocationType,omitempty"`
	StorageClass         string   `protobuf:"bytes,4,opt,name=StorageClass,proto3" json:"StorageClass,omitempty"`
	NodeId               string   `protobuf:"bytes,5,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	Owners               []string `protobuf:"bytes,6,rep,name=Owners,proto3" json:"Owners,omitempty"`
	Size                 int64    `protobuf:"varint,7,opt,name=Size,proto3" json:"Size,omitempty"`
	Mode                 string   `protobuf:"bytes,8,opt,name=Mode,proto3" json:"Mode,omitempty"`
	Type                 string   `protobuf:"bytes,9,opt,name=Type,proto3" json:"Type,omitempty"`
	Health               string   `protobuf:"bytes,10,opt,name=Health,proto3" json:"Health,omitempty"`
	OperationalStatus    string   `protobuf:"bytes,11,opt,name=OperationalStatus,proto3" json:"OperationalStatus,omitempty"`
	CSIStatus            string   `protobuf:"bytes,12,opt,name=CSIStatus,proto3" json:"CSIStatus,omitempty"`
	Ephemeral            bool     `protobuf:"varint,13,opt,name=Ephemeral,proto3" json:"Ephemeral,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Volume) Reset()         { *m = Volume{} }
func (m *Volume) String() string { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()    {}
func (*Volume) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}

func (m *Volume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Volume.Unmarshal(m, b)
}
func (m *Volume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Volume.Marshal(b, m, deterministic)
}
func (m *Volume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Volume.Merge(m, src)
}
func (m *Volume) XXX_Size() int {
	return xxx_messageInfo_Volume.Size(m)
}
func (m *Volume) XXX_DiscardUnknown() {
	xxx_messageInfo_Volume.DiscardUnknown(m)
}

var xxx_messageInfo_Volume proto.InternalMessageInfo

func (m *Volume) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Volume) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Volume) GetLocationType() string {
	if m != nil {
		return m.LocationType
	}
	return ""
}

func (m *Volume) GetStorageClass() string {
	if m != nil {
		return m.StorageClass
	}
	return ""
}

func (m *Volume) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *Volume) GetOwners() []string {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *Volume) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Volume) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *Volume) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Volume) GetHealth() string {
	if m != nil {
		return m.Health
	}
	return ""
}

func (m *Volume) GetOperationalStatus() string {
	if m != nil {
		return m.OperationalStatus
	}
	return ""
}

func (m *Volume) GetCSIStatus() string {
	if m != nil {
		return m.CSIStatus
	}
	return ""
}

func (m *Volume) GetEphemeral() bool {
	if m != nil {
		return m.Ephemeral
	}
	return false
}

type AvailableCapacity struct {
	Location             string   `protobuf:"bytes,1,opt,name=Location,proto3" json:"Location,omitempty"`
	NodeId               string   `protobuf:"bytes,2,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	StorageClass         string   `protobuf:"bytes,3,opt,name=storageClass,proto3" json:"storageClass,omitempty"`
	Size                 int64    `protobuf:"varint,4,opt,name=Size,proto3" json:"Size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailableCapacity) Reset()         { *m = AvailableCapacity{} }
func (m *AvailableCapacity) String() string { return proto.CompactTextString(m) }
func (*AvailableCapacity) ProtoMessage()    {}
func (*AvailableCapacity) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{2}
}

func (m *AvailableCapacity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailableCapacity.Unmarshal(m, b)
}
func (m *AvailableCapacity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailableCapacity.Marshal(b, m, deterministic)
}
func (m *AvailableCapacity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailableCapacity.Merge(m, src)
}
func (m *AvailableCapacity) XXX_Size() int {
	return xxx_messageInfo_AvailableCapacity.Size(m)
}
func (m *AvailableCapacity) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailableCapacity.DiscardUnknown(m)
}

var xxx_messageInfo_AvailableCapacity proto.InternalMessageInfo

func (m *AvailableCapacity) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *AvailableCapacity) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *AvailableCapacity) GetStorageClass() string {
	if m != nil {
		return m.StorageClass
	}
	return ""
}

func (m *AvailableCapacity) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type AvailableCapacityReservation struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	StorageClass         string   `protobuf:"bytes,2,opt,name=StorageClass,proto3" json:"StorageClass,omitempty"`
	Size                 int64    `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`
	Reservations         []string `protobuf:"bytes,4,rep,name=Reservations,proto3" json:"Reservations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvailableCapacityReservation) Reset()         { *m = AvailableCapacityReservation{} }
func (m *AvailableCapacityReservation) String() string { return proto.CompactTextString(m) }
func (*AvailableCapacityReservation) ProtoMessage()    {}
func (*AvailableCapacityReservation) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{3}
}

func (m *AvailableCapacityReservation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvailableCapacityReservation.Unmarshal(m, b)
}
func (m *AvailableCapacityReservation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvailableCapacityReservation.Marshal(b, m, deterministic)
}
func (m *AvailableCapacityReservation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvailableCapacityReservation.Merge(m, src)
}
func (m *AvailableCapacityReservation) XXX_Size() int {
	return xxx_messageInfo_AvailableCapacityReservation.Size(m)
}
func (m *AvailableCapacityReservation) XXX_DiscardUnknown() {
	xxx_messageInfo_AvailableCapacityReservation.DiscardUnknown(m)
}

var xxx_messageInfo_AvailableCapacityReservation proto.InternalMessageInfo

func (m *AvailableCapacityReservation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AvailableCapacityReservation) GetStorageClass() string {
	if m != nil {
		return m.StorageClass
	}
	return ""
}

func (m *AvailableCapacityReservation) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *AvailableCapacityReservation) GetReservations() []string {
	if m != nil {
		return m.Reservations
	}
	return nil
}

type LogicalVolumeGroup struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Node                 string   `protobuf:"bytes,2,opt,name=Node,proto3" json:"Node,omitempty"`
	Locations            []string `protobuf:"bytes,3,rep,name=Locations,proto3" json:"Locations,omitempty"`
	Size                 int64    `protobuf:"varint,4,opt,name=Size,proto3" json:"Size,omitempty"`
	VolumeRefs           []string `protobuf:"bytes,5,rep,name=VolumeRefs,proto3" json:"VolumeRefs,omitempty"`
	Status               string   `protobuf:"bytes,6,opt,name=Status,proto3" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogicalVolumeGroup) Reset()         { *m = LogicalVolumeGroup{} }
func (m *LogicalVolumeGroup) String() string { return proto.CompactTextString(m) }
func (*LogicalVolumeGroup) ProtoMessage()    {}
func (*LogicalVolumeGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{4}
}

func (m *LogicalVolumeGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogicalVolumeGroup.Unmarshal(m, b)
}
func (m *LogicalVolumeGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogicalVolumeGroup.Marshal(b, m, deterministic)
}
func (m *LogicalVolumeGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogicalVolumeGroup.Merge(m, src)
}
func (m *LogicalVolumeGroup) XXX_Size() int {
	return xxx_messageInfo_LogicalVolumeGroup.Size(m)
}
func (m *LogicalVolumeGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_LogicalVolumeGroup.DiscardUnknown(m)
}

var xxx_messageInfo_LogicalVolumeGroup proto.InternalMessageInfo

func (m *LogicalVolumeGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LogicalVolumeGroup) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *LogicalVolumeGroup) GetLocations() []string {
	if m != nil {
		return m.Locations
	}
	return nil
}

func (m *LogicalVolumeGroup) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *LogicalVolumeGroup) GetVolumeRefs() []string {
	if m != nil {
		return m.VolumeRefs
	}
	return nil
}

func (m *LogicalVolumeGroup) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type CSIBMNode struct {
	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// key - address type, value - address, align with NodeAddress struct from k8s.io/api/core/v1
	Addresses            map[string]string `protobuf:"bytes,2,rep,name=Addresses,proto3" json:"Addresses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CSIBMNode) Reset()         { *m = CSIBMNode{} }
func (m *CSIBMNode) String() string { return proto.CompactTextString(m) }
func (*CSIBMNode) ProtoMessage()    {}
func (*CSIBMNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{5}
}

func (m *CSIBMNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSIBMNode.Unmarshal(m, b)
}
func (m *CSIBMNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSIBMNode.Marshal(b, m, deterministic)
}
func (m *CSIBMNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSIBMNode.Merge(m, src)
}
func (m *CSIBMNode) XXX_Size() int {
	return xxx_messageInfo_CSIBMNode.Size(m)
}
func (m *CSIBMNode) XXX_DiscardUnknown() {
	xxx_messageInfo_CSIBMNode.DiscardUnknown(m)
}

var xxx_messageInfo_CSIBMNode proto.InternalMessageInfo

func (m *CSIBMNode) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *CSIBMNode) GetAddresses() map[string]string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func init() {
	proto.RegisterType((*Drive)(nil), "v1api.Drive")
	proto.RegisterType((*Volume)(nil), "v1api.Volume")
	proto.RegisterType((*AvailableCapacity)(nil), "v1api.AvailableCapacity")
	proto.RegisterType((*AvailableCapacityReservation)(nil), "v1api.AvailableCapacityReservation")
	proto.RegisterType((*LogicalVolumeGroup)(nil), "v1api.LogicalVolumeGroup")
	proto.RegisterType((*CSIBMNode)(nil), "v1api.CSIBMNode")
	proto.RegisterMapType((map[string]string)(nil), "v1api.CSIBMNode.AddressesEntry")
}

func init() {
	proto.RegisterFile("types.proto", fileDescriptor_d938547f84707355)
}

var fileDescriptor_d938547f84707355 = []byte{
	// 662 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0x9d, 0xc4, 0x8d, 0x27, 0xa1, 0xb4, 0x2b, 0x54, 0xad, 0xaa, 0x08, 0x22, 0x9f, 0x72,
	0x40, 0x91, 0x80, 0x0b, 0x42, 0x70, 0x68, 0x9a, 0x02, 0x96, 0xda, 0xb4, 0x72, 0x68, 0x0f, 0xdc,
	0xb6, 0xf1, 0xd0, 0x5a, 0x38, 0xb1, 0xb5, 0xb6, 0x53, 0x99, 0x0b, 0x6f, 0xc0, 0x13, 0x70, 0xe6,
	0x65, 0x78, 0x13, 0x9e, 0x02, 0xcd, 0xae, 0xe3, 0x1f, 0x12, 0x6e, 0x33, 0xdf, 0xec, 0xfc, 0xf8,
	0xfb, 0xc6, 0x03, 0xbd, 0x34, 0x8f, 0x31, 0x19, 0xc7, 0x32, 0x4a, 0x23, 0xd6, 0x59, 0xbf, 0x10,
	0x71, 0xe0, 0xfc, 0x6e, 0x41, 0x67, 0x2a, 0x83, 0x35, 0x32, 0x06, 0xed, 0xeb, 0x6b, 0x77, 0xca,
	0x8d, 0xa1, 0x31, 0xb2, 0x3d, 0x65, 0xb3, 0x03, 0x68, 0xdd, 0xb8, 0x53, 0x6e, 0x2a, 0x88, 0x4c,
	0x42, 0xae, 0xdc, 0x29, 0x6f, 0x69, 0xe4, 0xca, 0x9d, 0x32, 0x07, 0xfa, 0x73, 0x94, 0x81, 0x08,
	0x67, 0xd9, 0xf2, 0x16, 0x25, 0x6f, 0xab, 0x50, 0x03, 0x63, 0x47, 0x60, 0x7d, 0x44, 0x11, 0xa6,
	0xf7, 0xbc, 0xa3, 0xa2, 0x85, 0x47, 0x3d, 0x3f, 0xe5, 0x31, 0x72, 0x4b, 0xf7, 0x24, 0x9b, 0xb0,
	0x79, 0xf0, 0x0d, 0xf9, 0xde, 0xd0, 0x18, 0xb5, 0x3c, 0x65, 0x53, 0xfe, 0x3c, 0x15, 0x69, 0x96,
	0xf0, 0xae, 0xce, 0xd7, 0x1e, 0x7b, 0x0e, 0x87, 0x97, 0x31, 0x4a, 0x91, 0x06, 0xd1, 0x4a, 0x84,
	0xc5, 0x13, 0x5b, 0x3d, 0xd9, 0x0e, 0x50, 0x95, 0x59, 0xe4, 0xa3, 0xeb, 0x73, 0xd0, 0x55, 0xb4,
	0x47, 0x1d, 0xaf, 0x44, 0x7a, 0xcf, 0x7b, 0x7a, 0x0a, 0xb2, 0xd9, 0x00, 0xec, 0xb3, 0xd5, 0x22,
	0x8c, 0x92, 0x4c, 0x22, 0xef, 0xab, 0x40, 0x05, 0xa8, 0x19, 0xc3, 0x28, 0xe5, 0x8f, 0x74, 0x06,
	0xd9, 0xc4, 0xcc, 0x44, 0xe4, 0x7c, 0x5f, 0x33, 0x33, 0x11, 0x39, 0x3b, 0x86, 0xee, 0xfb, 0x40,
	0x2e, 0x1f, 0x84, 0x44, 0xfe, 0x58, 0xc1, 0xa5, 0xaf, 0xeb, 0xfb, 0x99, 0x14, 0xab, 0x05, 0xf2,
	0x03, 0xf5, 0xa9, 0x15, 0x40, 0x99, 0xe7, 0x67, 0x53, 0x1a, 0x1b, 0xf9, 0xa1, 0xce, 0xdc, 0xf8,
	0x14, 0x73, 0x93, 0x79, 0x9e, 0xa4, 0xb8, 0xe4, 0x6c, 0x68, 0x8c, 0xba, 0x5e, 0xe9, 0x3b, 0x7f,
	0x4c, 0xb0, 0x6e, 0xa2, 0x30, 0x5b, 0x22, 0xdb, 0x07, 0xd3, 0xf5, 0x0b, 0x31, 0x4d, 0xd7, 0x57,
	0x25, 0xa3, 0x85, 0x22, 0xa4, 0xd0, 0xb3, 0xf4, 0x49, 0xc2, 0x8d, 0xad, 0xe4, 0xd0, 0xea, 0x36,
	0x30, 0x25, 0x73, 0x1a, 0x49, 0x71, 0x87, 0xa7, 0xa1, 0x48, 0x92, 0x52, 0xe6, 0x1a, 0x56, 0x23,
	0xb8, 0xd3, 0x20, 0xf8, 0x08, 0xac, 0xcb, 0x87, 0x15, 0xca, 0x84, 0x5b, 0xc3, 0x16, 0xe1, 0xda,
	0xdb, 0x29, 0x35, 0x83, 0xf6, 0x45, 0xe4, 0x63, 0x21, 0xb4, 0xb2, 0xcb, 0x35, 0xb1, 0x6b, 0x6b,
	0x52, 0xad, 0x14, 0x34, 0x56, 0x6a, 0xe7, 0x4a, 0xf4, 0xfe, 0xb7, 0x12, 0x03, 0xb0, 0x4f, 0xe7,
	0x6e, 0xf1, 0xaa, 0x90, 0xb9, 0x04, 0x94, 0x48, 0xf1, 0x3d, 0x2e, 0x51, 0x8a, 0x50, 0x69, 0xdd,
	0xf5, 0x2a, 0xc0, 0xf9, 0x0e, 0x87, 0x27, 0x6b, 0x11, 0x84, 0xe2, 0x36, 0xc4, 0x53, 0x11, 0x8b,
	0x45, 0x90, 0xe6, 0x0d, 0x9a, 0x8d, 0x7f, 0x68, 0xae, 0xe8, 0x31, 0x1b, 0xf4, 0x38, 0xd0, 0x4f,
	0xea, 0xd4, 0x16, 0xf4, 0xd7, 0xb1, 0x92, 0xaa, 0x76, 0x45, 0x95, 0xf3, 0xc3, 0x80, 0xc1, 0xd6,
	0x04, 0x1e, 0x26, 0x28, 0xd7, 0xba, 0x21, 0x83, 0xf6, 0x4c, 0x2c, 0x71, 0xf3, 0x4b, 0x93, 0xbd,
	0xa5, 0xa3, 0xb9, 0x43, 0xc7, 0x4d, 0xb3, 0x56, 0x4d, 0x17, 0x07, 0xfa, 0xb5, 0xd2, 0xa4, 0x3f,
	0x29, 0xd9, 0xc0, 0x9c, 0x5f, 0x06, 0xb0, 0xf3, 0xe8, 0x2e, 0x58, 0x88, 0x50, 0x6f, 0xe1, 0x07,
	0x19, 0x65, 0xf1, 0xce, 0x31, 0x08, 0x23, 0x99, 0xcd, 0x02, 0x23, 0x99, 0x07, 0x60, 0x6f, 0xb8,
	0x22, 0x12, 0xa8, 0x7e, 0x05, 0xec, 0x62, 0x80, 0x3d, 0x05, 0xd0, 0x8d, 0x3c, 0xfc, 0x92, 0xf0,
	0x8e, 0x4a, 0xa9, 0x21, 0xb5, 0xbb, 0x61, 0xd5, 0xef, 0x86, 0xf3, 0xd3, 0x50, 0xba, 0x4f, 0x2e,
	0x66, 0xc5, 0x7a, 0x6d, 0x5d, 0xbe, 0x77, 0x60, 0x9f, 0xf8, 0xbe, 0xc4, 0x24, 0x41, 0xe2, 0xa8,
	0x35, 0xea, 0xbd, 0x7c, 0x36, 0x56, 0x27, 0x73, 0x5c, 0x26, 0x8e, 0xcb, 0x17, 0x67, 0xab, 0x54,
	0xe6, 0x5e, 0x95, 0x71, 0xfc, 0x16, 0xf6, 0x9b, 0x41, 0x3a, 0x0f, 0x5f, 0x31, 0x2f, 0x7a, 0x90,
	0xc9, 0x9e, 0x40, 0x67, 0x2d, 0xc2, 0x6c, 0xc3, 0x81, 0x76, 0xde, 0x98, 0xaf, 0x8d, 0xc9, 0xde,
	0x67, 0x7d, 0x9d, 0x6f, 0x2d, 0x75, 0xab, 0x5f, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x31,
	0xb7, 0x25, 0xba, 0x05, 0x00, 0x00,
}
